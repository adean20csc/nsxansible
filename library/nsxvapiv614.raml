#%RAML 0.8
title: VMware NSX for vSphere API
baseUri: https://{nsxmanager}/api
baseUriParameters:
  nsxmanager:
    displayName: nsxManager
    description: This is the hostname or IP of NSX Manager
version: v6.1.4
securedBy: [basic]
schemas:
  - vdsContext: !include schemas/vdscontext.xml
    vdnSegment: !include schemas/vdnsegment.xml
    vdnSegmentUpdate: !include schemas/vdnsegmentUpdate.xml
    vdnMulticast: !include schemas/vdnmulticast.xml
    vdnMulticastUpdate: !include schemas/vdnmulticastUpdate.xml
    vdnScopeCreate: !include schemas/vdnScopeCreate.xml
    vdnScopeUpdate: !include schemas/vdnScopeUpdate.xml
    logicalswitchCreate: !include schemas/logicalswitchCreate.xml
    logicalSwitchVmAttach: !include schemas/logicalswitchVmAttach.xml
    ipset: !include schemas/ipset.xml
securitySchemes:
  - basic:
      type: Basic Authentication
/2.0/vdn/switches:
  displayName: vdsManage
  description: This collection of methods are used to configure and prepare the VDS's for the use with NSX
  post:
    displayName: vdsPrepare
    description: prepares a pre-configured vds with teaming and MTU options, MTU must be 1600 or higher
    body:
      application/xml:
        schema: vdsContext
  get:
    displayName: vdsList
    description: Lists all vds's
  /datacenter/{datacenterID}:
    displayName: vdsInDc
    description: Lists all VDS's in a specified vSphere Datacenter Object
    uriParameters:
      datacenterID:
          required: true
          displayName: datacenterID
          description: A valid Datacenter Id (e.g. datacenter-4)
    get:
      displayName: vdsListInDc
      description: Lists all VDS's in a specified vSphere Datacenter Object
  /{vdsId}:
    displayName: vds
    description: Retrieve a specific vds by specific switchId (e.g. dvs-26)
    uriParameters:
      vdsId:
          required: true
          displayName: switchId
          description: A valid switch (VDS) Id (e.g. dvs-26)
    get:
      displayName: vdsShow
      description: Retrieve a specific vds by specific switchId (e.g. dvs-26)
    delete:
      displayName: vdsDelete
      description: Delete a specific vds by specific switchId (e.g. dvs-26)
/2.0/vdn/config:
  displayName: vdnConfig
  description: Configurations of Segment ID's and Multicast Ranges for logical switches
  /segments:
    displayName: vdnSegmentPools
    description: Operations on Segment ID's (VXLAN Id'd)
    post:
      displayName: vdnSegmentPoolAdd
      description: Add a segment ID Pool
      body:
        application/xml:
          schema: vdnSegment
    get: 
      displayName: vdnSegmentPoolList
      description: Lists all Segment ID Pools
    /{segmentPoolId}: 
      displayName: vdnSegmentPool
      description: Operations on individual segment ID Pool
      uriParameters:
        segmentPoolId:
          required: true
          displayName: segmentPoolId
          description: A valid segment Pool Id
      get:
        displayName: vdnSegmentPoolShow
        description: Retrieve details of an individual segment ID Pool
      put:
        displayName: vdnSegmentPoolChange
        description: Update an individual segment ID Pool
        body:
          application/xml:
            schema: vdnSegmentUpdate
      delete:
        displayName: vdnSegmentPoolDelete
        description: Delete an individual segment ID Pool
  /multicasts:
    displayName: vdnMulticastPools
    description: Operations on multicast range Pools for logical switches
    post:
      displayName: vdnMulticastPoolAdd
      description: Adds a multicast range for logical switches
      body:
        application/xml:
          schema: vdnMulticast
    get:
      displayName: vdnMulticastPoolList
      description: List all configured vdn Multicast Pools
    /{multicastAddresssRangeId}:
      displayName: vdnMulticastPool
      description: Operations in individual multicast range Pools for logical switches
      uriParameters:
        multicastAddresssRangeId:
          required: true
          displayName: multicastAddresssRangeId
          description: A valid multicast Pool range Id
      get:
        displayName: vdnMulticastPoolShow
        description: Retrieve details of an individual Multicast range Pool
      put:
        displayName: vdnMulticastPoolChange
        description: Update an individual Multicast range Pool
        body:
          application/xml:
            schema: vdnMulticastUpdate
      delete:
        displayName: vdnSegmentPoolDelete
        description: Delete an individual Multicast range Pool
  /vxlan/udp/port:
    displayName: vdnConfigUDP
    description: View configured UDP port for VXLAN
    get:
      displayName: vdnConfigUDPShow
      description: View configured UDP port for VXLAN
    /{portNumber}:
      displayName: vdnConfigUDPUpdate
      description: Updates the UDP Port used for VXLAN
      uriParameters:
        portNumber:
          required: true
          displayName: portNumber
          description: A valid UDP Port for VXLAN
      put:
        displayName: vdnConfigUDPUpdate
        description: Updates the UDP Port used for VXLAN
/2.0/vdn/scopes:
  displayName: vdnScopes
  description: Read all scopes (transport zones), or create a new scope (Transport Zone)
  get:
    displayName: vdnScopesList
    description: Retrieve a list of all known VDN Scopes
  post:
    displayName: vdnScopeCreate
    description: Create a new Transport Zone
    body:
      application/xml:
        schema: vdnScopeCreate
  /{scopeId}:
    displayName: vdnScope
    description: Read, update and delete an existing scope (transport Zone)
    uriParameters:
      scopeId:
        required: true
        displayName: scopeId
        description: A valid scope Id
    get:
      displayName: vdnScopeProperties
      description: Retrieve the properties of an existing network scope
    put:
      displayName: vdnScopeChange
      description: Updates a transport zone, you can add a cluster to or delete a cluster from a transport zone
      queryParameters:
        resource:
          displayName: action
          description: Mandatory queryParameter, alway set to 'patch'
          default: patch
          required: true
      body:
        application/xml:
          schema: vdnScopeUpdate
    delete:
      displayName: vdnScopeDelete
      description: delete a transport zone
    /attributes:
      displayName: vdnScopeAttribUpdate
      description: update the attributes of a transport zone (e.g. Name, description)
      put:
        displayName: vdnScopeAttribUpdate
        description: update the attributes of a transport zone (e.g. Name, description)
        body:
          application/xml:
            schema: vdnScopeUpdate
/2.0/vdn/scopes/{scopeId}/virtualwires:
  displayName: logicalSwitches
  description: Create and List operations of logical switches inside a Transport Zone (scope)
  uriParameters:
      scopeId:
        required: true
        displayName: scopeId
        description: A valid scope Id
  get:
    displayName: logicalSwitchList
    description: Lists all logical Switches in the Transport Zone (Scope)
  post:
    displayName: logicalSwitchCreate
    description: creates a logicalSwitch
    body:
      application/xml:
        schema: logicalswitchCreate
/2.0/vdn/virtualwires:
  displayName: logicalSwitchesGlobal
  description: List Operations of logicalSwitches in all transport Zones (scope)
  get:
    displayName: List all logicalSwitches
  /vm/vnic:
    displayName: logicalSwitchVmAttach
    description: Migrate a Virtual Maschine vnic to a logical switch
    get:
      displayName: logicalSwitchVmAttach
      description: Migrate a Virtual Maschine vnic to a logical switch
      body:
        application/xml:
          schema: logicalSwitchVmAttach
  /{virtualWireID}:
    displayName: logicalSwitch
    description: Retrieves the configuration of an individual logical switch
    uriParameters:
      virtualWireID:
        required: true
        displayName: virtualWireID
        description: A logical switch id, e.g. virtualwire-1002
    get:
      displayName: logicalSwitchShow
      description: Retrieves the configuration of an individual logical switch
    put:
      displayName: logicalSwitchUpdate
      description: Update a logical switch, possible updates are name changes & Controlplane Mode
    delete:
      displayName: logicalSwitchDelete
      description: Delete a logical switch
/2.0/services/ipset/scope/{scopeMoref}:
  displayName: ipsetList
  uriParameters:
    scopeMoref:
      required: true
      displayName: ipsetScopeMoref
      description: In the current version this scope-ref will always be globalroot-0
  get:
    description: Retrieve all configured IPSets
/2.0/services/ipset/{scopeMoref}:
  displayName: ipsetCreate
  uriParameters:
    scopeMoref:
      required: true
      displayName: ipsetScopeMoref
      description: In the current version this scope-ref will always be globalroot-0
  post:
    description: creates a new IPset
    body:
      application/xml:
        schema: ipset
/2.0/nwfabric:
  displayName: nwfabric
  /features:
    displayName: nwfabricFeatures
    get:
      description: Retrieves all features available on the cluster
  /status:
    displayName: nwfabricStatus
    get:
      description: Retrieves the Status of Resources
      queryParameters:
        resource:
          displayName: nwfabricResouce
          description: This is a valid vCenter MOID, e.g. domain-c34 for a cluster
          required: true
/2.0/services/ipset/{ipsetId}:
  displayName: ipset
  uriParameters:
    ipsetId:
      required: true
      displayName: ipsetId
      description: The IPset to be queried or changed
  get:
    description: Retrieve an individual IPset
  put:
    description: Modify an existing IPset
  delete:
    description: delete an IPset
